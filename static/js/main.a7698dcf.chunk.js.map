{"version":3,"sources":["seeddata/questions.js","contexts/QuestionsContext.js","reducers/quizSessionReducer.js","contexts/QuizSessionContext.js","hooks/useQuizSession.js","pages/Start.js","components/Question/Question.js","components/Tile/Tile.js","components/ScoreCard/ScoreCard.js","pages/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["seedQuestions","id","uuid","questionText","answers","correctAnswer","QuestionsContext","createContext","QuestionsProvider","props","useState","questions","Provider","value","children","quizSessionReducer","quizSession","action","updatedSession","console","log","playerName","type","questionsAnswered","isCorrect","questionsCorrect","QuizSessionContext","DispatchContext","QuizSessionProvider","useReducer","state","totalQuestions","useQuizSession","dispatch","Start","useContext","input","setInput","className","style","marginBottom","placeholder","onChange","e","target","onClick","history","push","label","Question","question","selectedAnswer","setSelectedAnswer","setIsCorrect","useEffect","header","footer","map","a","index","key","checked","disabled","name","answerIndex","indexOf","htmlFor","Tile","highlight","class","role","heading","ScoreCard","Quiz","q","App","routes","exact","path","render","routeProps","Boolean","window","location","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7698dcf.chunk.js","sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nconst seedQuestions = [\n  {\n    id: uuid(),\n    questionText: \"JSON name/value pair is written as\",\n    answers: [\n      \"name’ : ‘value’\",\n      \"name = ‘value’\",\n      \"name = “value”\",\n      \"“name” : “value”\"\n    ],\n    correctAnswer: [3]\n  },\n  {\n    id: uuid(),\n    questionText: \"JSON strings have to be in\",\n    answers: [\"single quote\", \"double quote\", \"single quote or double quote\"],\n    correctAnswer: [1]\n  },\n  {\n    id: uuid(),\n    questionText:\n      \"In the below notation, Employee is of type { “Employee”: [ “Amy”, “Bob”, “John” ] }\",\n    answers: [\"Not a valid JSON string\", \"Array\", \"Class\", \"Object\"],\n    correctAnswer: [1]\n  },\n  {\n    id: uuid(),\n    questionText: \"Which of the following is not a JSON type?\",\n    answers: [\"Object\", \"date\", \"Array\", \"string\"],\n    correctAnswer: [1]\n  },\n  {\n    id: uuid(),\n    questionText: \"Which of these is correct about the JSON standard?\",\n    answers: [\n      \"It is an open standard\",\n      \"It is privately developed\",\n      \"It requires a license to use\"\n    ],\n    correctAnswer: [0]\n  },\n  {\n    id: uuid(),\n    questionText: \"What is the file extension of JSON?\",\n    answers: [\".jn\", \".js\", \".jsn\", \".json\"],\n    correctAnswer: [3]\n  }\n];\n\nexport default seedQuestions;\n","import React, { createContext, useState } from \"react\";\nimport seedQuestions from \"../seeddata/questions\";\n\nexport const QuestionsContext = createContext();\n\nfunction QuestionsProvider(props) {\n  const [questions] = useState([...seedQuestions]);\n\n  return (\n    <QuestionsContext.Provider value={[questions]}>\n      {props.children}\n    </QuestionsContext.Provider>\n  );\n}\n\nexport default QuestionsProvider;\n","// const initialQuizSession = {\n//     playerName: null,\n//     state: \"NEW\",\n//     totalQuestions: 0,\n//     questionsAnswered: 0,\n//     questionsCorrect: 0\n//   };\n\nconst quizSessionReducer = (quizSession, action) => {\n  let updatedSession = {};\n  console.log(action.playerName);\n  switch (action.type) {\n    case \"AddPlayerName\":\n      updatedSession = { ...quizSession };\n      updatedSession.playerName = action.playerName;\n      return updatedSession;\n    case \"AnswerQuestion\":\n      updatedSession = { ...quizSession };\n      updatedSession.questionsAnswered += 1;\n      action.isCorrect\n        ? (updatedSession.questionsCorrect += 1)\n        : (updatedSession.questionsCorrect += 0);\n      return updatedSession;\n    // default:\n    //   return quizSession;\n  }\n};\n\nexport default quizSessionReducer;\n","import React, { createContext } from \"react\";\nimport useQuizSession from \"../hooks/useQuizSession\";\n\nexport const QuizSessionContext = createContext();\nexport const DispatchContext = createContext();\n\nfunction QuizSessionProvider(props) {\n  const [quizSession, dispatch] = useQuizSession();\n\n  return (\n    <QuizSessionContext.Provider value={quizSession}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </QuizSessionContext.Provider>\n  );\n}\n\nexport default QuizSessionProvider;\n","import { useReducer } from \"react\";\nimport quizSessionReducer from \"../reducers/quizSessionReducer\";\n\nexport default function useQuizSession() {\n  const initialQuizSession = {\n    playerName: null,\n    state: \"NEW\",\n    totalQuestions: 0,\n    questionsAnswered: 0,\n    questionsCorrect: 0\n  };\n  const [quizSession, dispatch] = useReducer(\n    quizSessionReducer,\n    initialQuizSession\n  );\n\n  return [quizSession, dispatch];\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { DispatchContext } from \"../contexts/QuizSessionContext\";\n\nexport default function Start(props) {\n  const dispatch = useContext(DispatchContext);\n  const [input, setInput] = useState(\"\");\n\n  const handleStartQuiz = () => {\n    if (input) {\n      dispatch({ type: \"AddPlayerName\", playerName: input });\n      props.history.push(\"/quiz\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 bg-indigo-300 min-h-screen\">\n      <h1 className=\"text-center font-bold text-4xl text-gray-100 mb-12\">\n        Welcome to{\" \"}\n        <span className=\"text-indigo-500 border-indigo-500 border-solid border-4 px-3 mr-2 ml-1 py-0 inline-block\">\n          React\n        </span>\n        Quiz\n      </h1>\n      <form className=\"flex flex-col px-10\">\n        <InputText\n          style={{ marginBottom: \"1em\" }}\n          placeholder=\"Enter you name\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <Button onClick={handleStartQuiz} label=\"Start Quiz\" type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { DispatchContext } from \"../../contexts/QuizSessionContext\";\nimport { Card } from \"primereact/card\";\nimport { RadioButton } from \"primereact/radiobutton\";\n\nexport default function Question(props) {\n  const { questionText, answers, correctAnswer } = props.question;\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const dispatch = useContext(DispatchContext);\n\n  const handleChooseAnswer = answerIndex => {\n    setSelectedAnswer(answerIndex);\n    correctAnswer.indexOf(answerIndex) >= 0\n      ? setIsCorrect(true)\n      : setIsCorrect(false);\n  };\n\n  useEffect(() => {\n    if (isCorrect !== null) {\n      dispatch({ type: \"AnswerQuestion\", isCorrect });\n    }\n  }, [isCorrect, dispatch]);\n\n  const header = (\n    <div className=\"bg-indigo-500 text-xl white py-4 px-4 font-semibold text-white\">\n      {questionText}\n    </div>\n  );\n\n  const footer = () => {\n    const correctClasses =\n      \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative\";\n    const incorrectClasses =\n      \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\";\n    return (\n      // Conditionally renders the infobox showing if answer is correct once the question has been answered\n      <div>\n        {isCorrect !== null && (\n          <div\n            className={`${\n              isCorrect ? correctClasses : incorrectClasses\n            } py-1 px-2 text-white rounded shadow`}\n          >\n            {isCorrect ? \"Correct\" : \"Wrong Answer\"}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <Card header={header} footer={footer()}>\n        {answers.map((a, index) => (\n          <div className=\"mb-2\" key={`rb-${index}`}>\n            <RadioButton\n              checked={selectedAnswer === index ? true : false}\n              disabled={isCorrect !== null}\n              name={`answer-${index}`}\n              value={index}\n              onChange={e => handleChooseAnswer(e.value)}\n            />\n            <label\n              htmlFor={`answer-${index}`}\n              className=\"p-radiobutton-label ml-4\"\n            >\n              {a}\n            </label>\n          </div>\n        ))}\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Tile(props) {\n  const { highlight = \"indigo\" } = props;\n  return (\n    <div\n      class=\"px-4 py-3 shadow-md bg-gray-100 rounded-lg mx-4 my-2 flex-1\"\n      role=\"alert\"\n    >\n      <div class=\"flex flex-row justify-between items-center\">\n        <div className=\"font-bold text-gray-500\">{props.heading}</div>\n        <div className={`text-6xl ml-5 mr-3 text-${highlight}-600`}>\n          {props.value}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { QuizSessionContext } from \"../../contexts/QuizSessionContext\";\n\nimport Tile from \"../Tile/Tile\";\n\nexport default function ScoreCard() {\n  // playerName: null,\n  // state: \"NEW\",\n  // totalQuestions: 0,\n  // questionsAnswered: 0,\n  // questionsCorrect: 0\n  const quizSession = useContext(QuizSessionContext);\n  const { questionsAnswered, questionsCorrect } = quizSession;\n\n  return (\n    <div className=\"flex justify-center pb-4 flex-col\">\n      <h1 className=\"text-4xl font-semibold text-center tracking-tight\">\n        Scorecard\n      </h1>\n      <div className=\"flex flex-col md:flex-row justify-center py-3\">\n        <Tile heading=\"Correct\" value={questionsCorrect} />\n        <Tile\n          heading=\"Incorrect\"\n          value={questionsAnswered - questionsCorrect}\n        />\n        <Tile heading=\"Total Answered\" value={questionsAnswered} />\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Question from \"../components/Question/Question\";\nimport ScoreCard from \"../components/ScoreCard/ScoreCard\";\nimport { QuestionsContext } from \"../contexts/QuestionsContext\";\nimport { QuizSessionContext } from \"../contexts/QuizSessionContext\";\n\nexport default function Quiz(props) {\n  const [questions] = useContext(QuestionsContext);\n  const quizSession = useContext(QuizSessionContext);\n  const { playerName } = quizSession;\n  return (\n    <div className=\"bg-gray-200 pt-8 px-4 min-h-screen\">\n      <h1 className=\"text-4xl font-bold bg-indigo-200 rounded text-white px-4 text-center mb-4 shadow border-solid border border-indigo-500 border-dashed py-2\">\n        Welcome, {playerName || \"Guest\"}\n      </h1>\n      <h2 className=\"text-2xl text-4xl font-bold text-gray-900 leading-tight mb-8 text-center\">\n        Quiz from anywhere.\n        <span className=\"text-indigo-500\"> Built Using React</span>\n      </h2>\n      {questions.map(q => (\n        <Question question={q} key={q.id} />\n      ))}\n      <ScoreCard />\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Start from \"./pages/Start\";\nimport Quiz from \"./pages/Quiz\";\n\nfunction App() {\n  const routes = (\n    <Switch>\n      <Route\n        exact\n        path={`/`}\n        render={routeProps => <Start {...routeProps} />}\n      />\n      <Route\n        exact\n        path={`/quiz`}\n        render={routeProps => <Quiz {...routeProps} />}\n      />\n      <Route render={() => <div>Not Found</div>} />\n    </Switch>\n  );\n\n  return <div>{routes}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport QuestionsProvider from \"./contexts/QuestionsContext\";\nimport QuizSessionProvider from \"./contexts/QuizSessionContext\";\nimport DispatchProvider from \"./contexts/QuizSessionContext\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// CSS dependencies for App\nimport \"./assets/main.css\";\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={\"/react-quiz\"}>\n      <QuestionsProvider>\n        <QuizSessionProvider>\n          <App />\n        </QuizSessionProvider>\n      </QuestionsProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}